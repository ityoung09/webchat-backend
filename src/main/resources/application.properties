spring.application.name=webchat-backend
server.port=8081

# ==================== \u6570\u636E\u6E90\u57FA\u672C\u914D\u7F6E ====================
# MySQL\u9A71\u52A8\u7C7B\u540D
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# \u6570\u636E\u5E93\u8FDE\u63A5URL
spring.datasource.url=jdbc:mysql://localhost:3306/webchat?serverTimezone=Hongkong&useAffectedRows=true&characterEncoding=utf-8
# \u6570\u636E\u5E93\u7528\u6237\u540D
spring.datasource.username=root
# \u6570\u636E\u5E93\u5BC6\u7801
spring.datasource.password=rootmysql
# ==================== HikariCP\u8FDE\u63A5\u6C60\u914D\u7F6E ====================
# \u6307\u5B9A\u4F7F\u7528HikariCP\u8FDE\u63A5\u6C60\uFF08Spring Boot 3\u9ED8\u8BA4\uFF0C\u53EF\u7701\u7565\uFF09
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# \u8FDE\u63A5\u6C60\u540D\u79F0\uFF0C\u4FBF\u4E8E\u65E5\u5FD7\u8BC6\u522B\u548C\u76D1\u63A7
spring.datasource.hikari.pool-name=WebChatHikariCP
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u9ED8\u8BA410\uFF09
# \u6839\u636E\u5E94\u7528\u5E76\u53D1\u91CF\u8C03\u6574\uFF0C\u4E00\u822C\u8BBE\u7F6E\u4E3ACPU\u6838\u5FC3\u6570*2\u5230CPU\u6838\u5FC3\u6570*4
spring.datasource.hikari.maximum-pool-size=20
# \u8FDE\u63A5\u6C60\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\uFF08\u9ED8\u8BA4\u4E0Emaximum-pool-size\u76F8\u540C\uFF09
# \u5EFA\u8BAE\u8BBE\u7F6E\u4E3A\u6700\u5927\u8FDE\u63A5\u6570\u76841/4\u52301/2
spring.datasource.hikari.minimum-idle=5
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA430000\uFF09
# \u5BA2\u6237\u7AEF\u7B49\u5F85\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u95F4
spring.datasource.hikari.connection-timeout=30000
# \u8FDE\u63A5\u7A7A\u95F2\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA4600000\u537310\u5206\u949F\uFF09
# \u8FDE\u63A5\u5728\u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u65F6\u95F4\uFF0C\u8D85\u8FC7\u5C06\u88AB\u91CA\u653E
spring.datasource.hikari.idle-timeout=600000
# \u8FDE\u63A5\u6700\u5927\u751F\u5B58\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA41800000\u537330\u5206\u949F\uFF09
# \u8FDE\u63A5\u5728\u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u751F\u5B58\u65F6\u95F4\uFF0C\u9632\u6B62\u6570\u636E\u5E93\u5F3A\u5236\u5173\u95ED\u957F\u8FDE\u63A5
spring.datasource.hikari.max-lifetime=1800000
# \u8FDE\u63A5\u6CC4\u6F0F\u68C0\u6D4B\u9608\u503C\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA40\u8868\u793A\u7981\u7528\uFF09
# \u8FDE\u63A5\u88AB\u4F7F\u7528\u8D85\u8FC7\u6B64\u65F6\u95F4\u4F1A\u6253\u5370\u8B66\u544A\u65E5\u5FD7\uFF0C\u5E2E\u52A9\u53D1\u73B0\u8FDE\u63A5\u6CC4\u6F0F
spring.datasource.hikari.leak-detection-threshold=60000
# ==================== HikariCP\u9AD8\u7EA7\u914D\u7F6E ====================
# \u8FDE\u63A5\u521D\u59CB\u5316SQL\u8BED\u53E5
# \u6BCF\u6B21\u521B\u5EFA\u65B0\u8FDE\u63A5\u65F6\u6267\u884C\u7684SQL\uFF0C\u7528\u4E8E\u521D\u59CB\u5316\u8FDE\u63A5\u72B6\u6001
spring.datasource.hikari.connection-init-sql=SELECT 1
# \u8FDE\u63A5\u6D4B\u8BD5\u67E5\u8BE2\u8BED\u53E5\uFF08\u73B0\u4EE3\u6570\u636E\u5E93\u9A71\u52A8\u901A\u5E38\u4E0D\u9700\u8981\uFF09
# HikariCP\u4F1A\u81EA\u52A8\u4F7F\u7528JDBC4\u7684isValid()\u65B9\u6CD5
# spring.datasource.hikari.connection-test-query=SELECT 1
# \u662F\u5426\u81EA\u52A8\u63D0\u4EA4\u4E8B\u52A1\uFF08\u9ED8\u8BA4true\uFF09
spring.datasource.hikari.auto-commit=true
# \u4E8B\u52A1\u9694\u79BB\u7EA7\u522B\uFF08\u53EF\u9009\uFF1ATRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE\uFF09
# \u4E0D\u8BBE\u7F6E\u5219\u4F7F\u7528\u6570\u636E\u5E93\u9ED8\u8BA4\u7EA7\u522B
# spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED
# \u662F\u5426\u53EA\u8BFB\u8FDE\u63A5\uFF08\u9ED8\u8BA4false\uFF09
spring.datasource.hikari.read-only=false
# \u8FDE\u63A5\u521D\u59CB\u5316\u5931\u8D25\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA41\uFF09
# \u8FDE\u63A5\u6C60\u542F\u52A8\u65F6\uFF0C\u5982\u679C\u65E0\u6CD5\u521B\u5EFA\u521D\u59CB\u8FDE\u63A5\u7684\u8D85\u65F6\u65F6\u95F4
spring.datasource.hikari.initialization-fail-timeout=1
# \u662F\u5426\u9694\u79BB\u5185\u90E8\u67E5\u8BE2\uFF08\u9ED8\u8BA4false\uFF09
# \u542F\u7528\u540E\uFF0CHikariCP\u5185\u90E8\u7684\u4E00\u4E9B\u67E5\u8BE2\u4F1A\u4F7F\u7528\u72EC\u7ACB\u7684\u8FDE\u63A5
spring.datasource.hikari.isolate-internal-queries=false
# \u662F\u5426\u5141\u8BB8\u8FDE\u63A5\u6C60\u6682\u505C\uFF08\u9ED8\u8BA4false\uFF09
# \u542F\u7528\u540E\u53EF\u4EE5\u901A\u8FC7JMX\u6682\u505C\u8FDE\u63A5\u6C60
spring.datasource.hikari.allow-pool-suspension=false
# \u662F\u5426\u6CE8\u518CJMX\u7BA1\u7406Bean\uFF08\u9ED8\u8BA4false\uFF09
# \u542F\u7528\u540E\u53EF\u4EE5\u901A\u8FC7JMX\u76D1\u63A7\u8FDE\u63A5\u6C60\u72B6\u6001
spring.datasource.hikari.register-mbeans=true
# \u9A8C\u8BC1\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF0C\u9ED8\u8BA45000\uFF09
# \u8FDE\u63A5\u6709\u6548\u6027\u68C0\u67E5\u7684\u8D85\u65F6\u65F6\u95F4
spring.datasource.hikari.validation-timeout=5000

# ==================== Redis \u57FA\u7840\u914D\u7F6E ====================
spring.data.redis.host=8.137.87.10
spring.data.redis.port=6379
spring.data.redis.password=alipassword
spring.data.redis.database=0
# \u4F7F\u7528 Lettuce \u5BA2\u6237\u7AEF\uFF08Spring Boot 3 \u9ED8\u8BA4\uFF09
spring.data.redis.client-type=lettuce
# \u8FDE\u63A5\u6C60\u914D\u7F6E\uFF08\u57FA\u4E8E commons-pool2\uFF09
# \u6700\u5927\u8FDE\u63A5\u6570
spring.data.redis.lettuce.pool.max-active=50
# \u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.data.redis.lettuce.pool.max-idle=20
# \u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.data.redis.lettuce.pool.min-idle=5
# \u83B7\u53D6\u8FDE\u63A5\u7684\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF08ms\uFF09
spring.data.redis.lettuce.pool.max-wait=5000

# ==================== Mybatis Plus\u914D\u7F6E ====================
mybatis-plus.global-config.banner=false


# ==================== Jackson\u914D\u7F6E ====================
spring.jackson.default-property-inclusion=NON_NULL

# ==================== SaToken\u914D\u7F6E ====================
sa-token.is-print=false
# token \u540D\u79F0\uFF08\u540C\u65F6\u4E5F\u662F cookie \u540D\u79F0\uFF09
sa-token.token-name=Authorization
# token \u6709\u6548\u671F\uFF08\u5355\u4F4D\uFF1A\u79D2\uFF09 \u9ED8\u8BA430\u5929\uFF0C-1 \u4EE3\u8868\u6C38\u4E45\u6709\u6548
sa-token.timeout=2592000
# token \u6700\u4F4E\u6D3B\u8DC3\u9891\u7387\uFF08\u5355\u4F4D\uFF1A\u79D2\uFF09\uFF0C\u5982\u679C token \u8D85\u8FC7\u6B64\u65F6\u95F4\u6CA1\u6709\u8BBF\u95EE\u7CFB\u7EDF\u5C31\u4F1A\u88AB\u51BB\u7ED3\uFF0C\u9ED8\u8BA4-1 \u4EE3\u8868\u4E0D\u9650\u5236\uFF0C\u6C38\u4E0D\u51BB\u7ED3
sa-token.active-timeout=604800
# \u662F\u5426\u5141\u8BB8\u540C\u4E00\u8D26\u53F7\u591A\u5730\u540C\u65F6\u767B\u5F55 \uFF08\u4E3A true \u65F6\u5141\u8BB8\u4E00\u8D77\u767B\u5F55, \u4E3A false \u65F6\u65B0\u767B\u5F55\u6324\u6389\u65E7\u767B\u5F55\uFF09
sa-token.is-concurrent=false
# \u5728\u591A\u4EBA\u767B\u5F55\u540C\u4E00\u8D26\u53F7\u65F6\uFF0C\u662F\u5426\u5171\u7528\u4E00\u4E2A token \uFF08\u4E3A true \u65F6\u6240\u6709\u767B\u5F55\u5171\u7528\u4E00\u4E2A token, \u4E3A false \u65F6\u6BCF\u6B21\u767B\u5F55\u65B0\u5EFA\u4E00\u4E2A token\uFF09
sa-token.is-share=true
# token \u98CE\u683C\uFF08\u9ED8\u8BA4\u53EF\u53D6\u503C\uFF1Auuid\u3001simple-uuid\u3001random-32\u3001random-64\u3001random-128\u3001tik\uFF09
sa-token.token-style=uuid
# \u662F\u5426\u8F93\u51FA\u64CD\u4F5C\u65E5\u5FD7
sa-token.is-log=true
sa-token.token-prefix=Bearer


